{
  "stats": {
    "suites": 2,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-05T08:51:16.611Z",
    "end": "2022-08-05T08:54:29.361Z",
    "duration": 118652,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "582fe61f-4f7a-4a5c-bc99-132623c18d83",
      "title": "",
      "fullFile": "cypress/integration/Main/AdminPanel/AdminLogin/adminLogin.feature",
      "file": "cypress/integration/Main/AdminPanel/AdminLogin/adminLogin.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a24ea47-56bc-44d2-bdb5-fb9dc19297e0",
          "title": "Admin Panel Login and Reset",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "To validate that admin cannot login to their account using invalid credentials.",
              "fullTitle": "Admin Panel Login and Reset To validate that admin cannot login to their account using invalid credentials.",
              "timedOut": null,
              "duration": 6338,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3ef610ef-b764-4a4a-8a6c-5315411dc036",
              "parentUUID": "9a24ea47-56bc-44d2-bdb5-fb9dc19297e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To validate that admin can login to their account using valid credentials",
              "fullTitle": "Admin Panel Login and Reset To validate that admin can login to their account using valid credentials",
              "timedOut": null,
              "duration": 12272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b781f1b9-f5ea-459c-aff9-b79dd6d7fe11",
              "parentUUID": "9a24ea47-56bc-44d2-bdb5-fb9dc19297e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To validate that admin can get password reset link in their email.",
              "fullTitle": "Admin Panel Login and Reset To validate that admin can get password reset link in their email.",
              "timedOut": null,
              "duration": 36249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5657b224-48ca-4272-923d-fe415da111bd",
              "parentUUID": "9a24ea47-56bc-44d2-bdb5-fb9dc19297e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To validate that clicking on \"Forgot Password?\" link opens the forgot password form field page.",
              "fullTitle": "Admin Panel Login and Reset To validate that clicking on \"Forgot Password?\" link opens the forgot password form field page.",
              "timedOut": null,
              "duration": 4536,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "37ecc448-0dfa-4bb0-b69e-18db5c528ec7",
              "parentUUID": "9a24ea47-56bc-44d2-bdb5-fb9dc19297e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To validate that incorrect email will not receive the password reset link on their email.",
              "fullTitle": "Admin Panel Login and Reset To validate that incorrect email will not receive the password reset link on their email.",
              "timedOut": null,
              "duration": 7867,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a1e9f79f-5f84-46ce-a1fd-eadf6cca1f1e",
              "parentUUID": "9a24ea47-56bc-44d2-bdb5-fb9dc19297e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ef610ef-b764-4a4a-8a6c-5315411dc036",
            "b781f1b9-f5ea-459c-aff9-b79dd6d7fe11",
            "5657b224-48ca-4272-923d-fe415da111bd",
            "37ecc448-0dfa-4bb0-b69e-18db5c528ec7",
            "a1e9f79f-5f84-46ce-a1fd-eadf6cca1f1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 67262,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "078ece2f-5c58-464f-9b97-041621c753c7",
      "title": "",
      "fullFile": "cypress/integration/Main/AdminPanel/AdminUsersModule/RolesModule/roles.feature",
      "file": "cypress/integration/Main/AdminPanel/AdminUsersModule/RolesModule/roles.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "869beadf-abb3-47ef-a289-ec04c4b70b4f",
          "title": "Roles",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "To validate that admin can create new roles",
              "fullTitle": "Roles To validate that admin can create new roles",
              "timedOut": null,
              "duration": 21286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6ad23b95-0e64-4182-9f9e-247d7dd398fe",
              "parentUUID": "869beadf-abb3-47ef-a289-ec04c4b70b4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To validate that admin can edit the roles successfully",
              "fullTitle": "Roles To validate that admin can edit the roles successfully",
              "timedOut": null,
              "duration": 13827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1a668693-f2ad-49d3-a781-e868369c3891",
              "parentUUID": "869beadf-abb3-47ef-a289-ec04c4b70b4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To validate that admin can search roles",
              "fullTitle": "Roles To validate that admin can search roles",
              "timedOut": null,
              "duration": 7051,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6ff5cb25-bbd6-4e68-bb8c-6c911f416651",
              "parentUUID": "869beadf-abb3-47ef-a289-ec04c4b70b4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To validate that admin can delete the roles successfully",
              "fullTitle": "Roles To validate that admin can delete the roles successfully",
              "timedOut": null,
              "duration": 9226,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f8b29d5-61d6-4f2a-8350-d06bea5aeed5",
              "parentUUID": "869beadf-abb3-47ef-a289-ec04c4b70b4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ad23b95-0e64-4182-9f9e-247d7dd398fe",
            "1a668693-f2ad-49d3-a781-e868369c3891",
            "6ff5cb25-bbd6-4e68-bb8c-6c911f416651",
            "9f8b29d5-61d6-4f2a-8350-d06bea5aeed5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51390,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}